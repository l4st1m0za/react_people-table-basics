{"version":3,"sources":["components/Navigation/Navigation.tsx","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","components/People.tsx","components/PageTitle/PageTitle.tsx","App.tsx","index.tsx"],"names":["Navigation","className","role","isActive","classNames","to","Loader","Table","people","personId","useParams","femaleNames","useMemo","Set","filter","item","sex","map","name","peopleMap","Map","person","slug","has","born","died","motherName","get","fatherName","People","useState","setPeople","error","setError","isLoading","setIsLoading","useEffect","fetch","then","response","json","data","catch","finally","length","PageTitle","title","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"kQAGaA,EAAa,kBACxB,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,8BAA+BD,GADtB,EAGXE,GAAG,IAJL,kBASA,cAAC,IAAD,CACEJ,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,8BAA+BD,GADtB,EAGXE,GAAG,UAJL,0BAlBkB,E,cCDbC,G,MAAS,kBACpB,qBAAKL,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCOTM,EAAyB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC/BC,EAAaC,cAAbD,SAEFE,EAAcC,mBAClB,kBAAM,IAAIC,IAAIL,EACXM,QAAO,SAACC,GAAD,MAAuB,MAAbA,EAAKC,GAAf,IACPC,KAAI,SAACF,GAAD,OAAUA,EAAKG,IAAf,IAFP,GAGA,CAACV,IAGGW,EAAYP,mBAChB,kBAAM,IAAIQ,IAAIZ,EAAOS,KAAI,SAACI,GAAD,MAAY,CAACA,EAAOH,KAAMG,EAA1B,IAAzB,GACA,CAACb,IAGH,OACE,wBACE,UAAQ,cACRP,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGO,EAAOS,KAAI,SAACF,GAAD,eACV,qBAEE,UAAQ,SACRd,UAAWG,IAAW,CACpB,yBAA0BW,EAAKO,OAASb,IAJ5C,UAOE,6BACE,cAAC,IAAD,CACEJ,GAAE,kBAAaU,EAAKO,MACpBrB,UAAWG,IAAW,CACpB,kBAAmBO,EAAYY,IAAIR,EAAKG,QAH5C,SAMGH,EAAKG,SAIV,6BAAKH,EAAKC,MACV,6BAAKD,EAAKS,OACV,6BAAKT,EAAKU,OACV,6BACGV,EAAKW,YAAcP,EAAUI,IAAIR,EAAKW,YACrC,cAAC,IAAD,CACErB,GAAE,4BAAac,EAAUQ,IAAIZ,EAAKW,mBAAhC,aAAa,EAAgCJ,MAC/CrB,UAAU,kBAFZ,SAIGc,EAAKW,aAGRX,EAAKW,YAAc,MAGvB,6BACGX,EAAKa,YAAcT,EAAUI,IAAIR,EAAKa,YACrC,cAAC,IAAD,CAAMvB,GAAE,4BAAac,EAAUQ,IAAIZ,EAAKa,mBAAhC,aAAa,EAAgCN,MAArD,SAA8DP,EAAKa,aAEnEb,EAAKa,YAAc,QApClBb,EAAKO,KAFF,QA8CnB,EClFYO,EAAS,WACpB,MAA4BC,mBAAoB,IAAhD,mBAAOtB,EAAP,KAAeuB,EAAf,KACA,EAA0BD,oBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,qBAAU,WACRD,GAAa,GAEbE,MAAM,qEACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJV,EAAUU,GACVR,GAAS,EACV,IACAS,OAAM,WACLT,GAAS,EACV,IACAU,SAAQ,WACPR,GAAa,EACd,GACJ,GAAE,IAGD,mCACE,qBAAKlC,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGiC,GACC,cAAC,EAAD,IAGDF,GACC,mBAAG,UAAQ,qBAAqB/B,UAAU,kBAA1C,kCAKiB,IAAlBO,EAAOoC,SAAiBZ,IAAUE,GACjC,mBAAG,UAAQ,kBAAX,gDAKAF,IAAUE,GACV,cAAC,EAAD,CAAO1B,OAAQA,UAO1B,ECnDYqC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBAAI7C,UAAU,QAAd,SAAuB6C,GADiB,ECE7BC,EAAM,WACjB,OACE,sBAAK,UAAQ,MAAb,UAEE,cAAC,EAAD,IACA,sBAAM9C,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE+C,KAAK,IACLC,QAAS,cAAC,EAAD,CAAWH,MAAM,gBAE5B,eAAC,IAAD,CAAOE,KAAK,SAAZ,UACE,cAAC,IAAD,CACEE,OAAK,EACLD,QACE,qCACE,cAAC,EAAD,CAAWH,MAAM,gBACjB,cAAC,EAAD,SAIN,cAAC,IAAD,CACEE,KAAK,YACLC,QACE,qCACE,cAAC,EAAD,CAAWH,MAAM,gBACjB,cAAC,EAAD,YAKR,cAAC,IAAD,CACEE,KAAK,IACLC,QACE,cAAC,EAAD,CAAWH,MAAM,qBAGrB,cAAC,IAAD,CACEE,KAAK,OACLC,QAAS,cAAC,IAAD,CAAU5C,GAAG,IAAI8C,SAAO,eAO9C,EC7CDC,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.6eec6a4e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const Table: React.FC<Props> = ({ people }) => {\n  const { personId } = useParams();\n\n  const femaleNames = useMemo(\n    () => new Set(people\n      .filter((item) => item.sex === 'f')\n      .map((item) => item.name)),\n    [people],\n  );\n\n  const peopleMap = useMemo(\n    () => new Map(people.map((person) => [person.name, person])),\n    [people],\n  );\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((item) => (\n          <tr\n            key={item.slug}\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': item.slug === personId,\n            })}\n          >\n            <td>\n              <Link\n                to={`/people/${item.slug}`}\n                className={classNames({\n                  'has-text-danger': femaleNames.has(item.name),\n                })}\n              >\n                {item.name}\n              </Link>\n            </td>\n\n            <td>{item.sex}</td>\n            <td>{item.born}</td>\n            <td>{item.died}</td>\n            <td>\n              {item.motherName && peopleMap.has(item.motherName) ? (\n                <Link\n                  to={`/people/${peopleMap.get(item.motherName)?.slug}`}\n                  className=\"has-text-danger\"\n                >\n                  {item.motherName}\n                </Link>\n              ) : (\n                item.motherName || '-'\n              )}\n            </td>\n            <td>\n              {item.fatherName && peopleMap.has(item.fatherName) ? (\n                <Link to={`/people/${peopleMap.get(item.fatherName)?.slug}`}>{item.fatherName}</Link>\n              ) : (\n                item.fatherName || '-'\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { Table } from './PeopleTable/PeopleTable';\n\nexport const People = () => {\n  const [people, setPeople] = useState<Person []>([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n      .then(response => response.json())\n      .then(data => {\n        setPeople(data);\n        setError(false);\n      })\n      .catch(() => {\n        setError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && !error && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!error && !isLoading && (\n            <Table people={people} />\n          )}\n        </div>\n      </div>\n\n    </>\n  );\n};\n","type Props = {\n  title: string;\n};\n\nexport const PageTitle: React.FC<Props> = ({ title }) => (\n  <h1 className=\"title\">{title}</h1>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { People } from './components/People';\nimport { PageTitle } from './components/PageTitle/PageTitle'\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n\n      <Navigation />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<PageTitle title=\"Home Page\" />}\n            />\n            <Route path=\"people\">\n              <Route\n                index\n                element={(\n                  <>\n                    <PageTitle title=\"People Page\" />\n                    <People />\n                  </>\n                )}\n              />\n              <Route\n                path=\":personId\"\n                element={(\n                  <>\n                    <PageTitle title=\"People Page\" />\n                    <People />\n                  </>\n                )}\n              />\n            </Route>\n            <Route\n              path=\"*\"\n              element={\n                <PageTitle title=\"Page not found\" />\n              }\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}